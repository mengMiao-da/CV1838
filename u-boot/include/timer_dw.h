#ifndef __DW_TIMER_H__
#define __DW_TIMER_H__

#define NS_PER_TICK		40
#define PRELOAD_CNT		0xFFFFFFFF

#define TIMER_ID1		0x0
#define TIMER_ID2		0x1
#define TIMER_ID3		0x2
#define TIMER_ID4		0x3
#define TIMER_ID5		0x4
#define TIMER_ID6		0x5
#define TIMER_ID7		0x6
#define TIMER_ID8		0x7

#define REG_TIMER_BASE					0x030A0000

#define REG_TIMER1_BASE					(REG_TIMER_BASE + 0x00)
#define REG_TIMERS_INTSTATUS			(REG_TIMER_BASE + 0xA0)
#define REG_TIMERS_EOI					(REG_TIMER_BASE + 0xA4)
#define REG_TIMERS_RAW_INTSTATUS		(REG_TIMER_BASE + 0xA8)
#define REG_TIMERS_COMP_VERSION			(REG_TIMER_BASE + 0xAC)
#define REG_TIMERN_LOADCNT2_BASE		(REG_TIMER_BASE + 0xB0)

#define REG_TIMER1_LOADCNT				REG_TIMER1_BASE
#define REG_TIMER1_LOADCNT2				(REG_TIMERN_LOADCNT2_BASE + 0x00)
#define REG_TIMER1_CURRENT_VALUE		(REG_TIMER1_BASE + 0x04)
#define REG_TIMER1_CONTROL				(REG_TIMER1_BASE + 0x08)
#define REG_TIMER1_EOI					(REG_TIMER1_BASE + 0x0C)
#define REG_TIMER1_INTSTATUS			(REG_TIMER1_BASE + 0x10)

#define TPU_SRAM_BASE		0x0C000000
#define TPU_SRAM_SIZE		0x40000 // 256KiB

#define BL_RAM_BASE			TPU_SRAM_BASE
#define BL_RAM_SIZE			TPU_SRAM_SIZE
#define BL_RAM_LIMIT		(BL_RAM_BASE + BL_RAM_SIZE)

/*
 * Boot Record
 * At the end of BL_RAM
 */
#ifdef CONFIG_TARGET_CVITEK_CV1822
#define BOOT_RECORD_BASE	(BL_RAM_LIMIT - BOOT_RECORD_SIZE)
#else
#define BOOT_RECORD_BASE	0x03005E00
#endif
#define BOOT_RECORD_SIZE	(4 * 8)
#define BLD_TIME_ADDR		(BOOT_RECORD_BASE + 0x00)
#define BL2_TIME_ADDR		(BOOT_RECORD_BASE + 0x04)
#define BL31_TIME_ADDR		(BOOT_RECORD_BASE + 0x08)
#define BL32_TIME_ADDR		(BOOT_RECORD_BASE + 0x0C)
#define BL33_TIME_ADDR		(BOOT_RECORD_BASE + 0x10)
#define BL1_TIME_ADDR		(BOOT_RECORD_BASE + 0x14)
#define BOOT_RECORD_R7_ADDR	(BOOT_RECORD_BASE + 0x18)
#define BOOT_RECORD_R8_ADDR	(BOOT_RECORD_BASE + 0x1C)

void dw_timer_start(uint32_t timer_id);
void dw_timer_stop(uint32_t timer_id, uint32_t *write_addr);

#endif /* __DW_TIMER_H__ */
