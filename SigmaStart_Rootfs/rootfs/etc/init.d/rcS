#!/bin/sh

mkdir -p /dev/shm
mkdir -p /dev/pts
mount -a

echo /sbin/mdev > /proc/sys/kernel/hotplug

/sbin/mdev -s

/sbin/sysctl -p

mkdir -p /var/lock
mount -t tmpfs mdev /dev
mdev -s
mount -t ubifs ubi0:miservice /config


# select system
cmdline=`cat /proc/cmdline`

RunOnDoubleSystem(){
    systemSelect=""
    for item in $cmdline
    do
        result=$(echo $item | grep "systemSelect=")
        if [[ "$result" != "" ]];then
            if [[ "$result" == "systemSelect=A" ]];then
                systemSelect="A"
            elif [[ "$result" == "systemSelect=B" ]];then
                systemSelect="B"
            fi
        fi
    done
    if [[ "$systemSelect" == "A" ]];then
        mount -t squashfs /dev/mtdblock4 /root/firmware
    elif [[ "$systemSelect" == "B" ]];then
        mount -t squashfs /dev/mtdblock7 /root/firmware
    else
        echo "cannot found valid systemSelect"
        exit
    fi
    echo "running on system $systemSelect"
    export SPARE=0
}

RunOnSpareSystem(){
    spare=""
    for item in $cmdline
    do
        result=$(echo $item | grep "spare=")
        if [[ "$result" != "" ]];then
            if [[ "$result" == "spare=1" ]];then
                spare="1"
            elif [[ "$result" == "spare=0" ]];then
                spare="0"
            fi
        fi
    done
    if [[ "$spare" == "0" ]];then
        mount -t squashfs /dev/mtdblock4 /root/firmware
    elif [[ "$spare" == "1" ]];then
        mount -t squashfs /dev/mtdblock5 /root/firmware
    else
        echo "cannot found valid spare"
        exit
    fi
    echo "running on spare = $spare"
    export SPARE=$spare
}

find=0
for item in $cmdline
do
    result=$(echo $item | grep "systemSelect=")
    if [[ "$result" != "" ]];then
       find=1
       break
    fi
done
if [[ "$find" == "1" ]];then
    RunOnDoubleSystem
else
    RunOnSpareSystem
fi

appinit.sh
